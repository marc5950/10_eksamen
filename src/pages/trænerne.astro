---
//@ts-nocheck
import Layout from "../layouts/Layout.astro";
import "../styles/global.css";
import trænercard_evan_lille from "../assets/trænercard_evan_lille.png";
import trænercard_evan_stor from "../assets/trænercard_evan_stor.png";
import trænercard_allan_lille from "../assets/trænercard_allan_lille.png";
import trænercard_allan_stor from "../assets/trænercard_allan_stor.png";
import trænercard_lucas_lille from "../assets/trænercard_lucas_lille.png";
import trænercard_lucas_stor from "../assets/trænercard_lucas_stor.png";
import Button from "../components/Button.astro";
import venstre from "../assets/knap_venstre.svg";
import højre from "../assets/knap_højre.svg";
---

<Layout title="Mød trænerne">
  <div class="ydre flexcol">
    <div class="textinfo flexcol">
      <h1>Step into the World of Elite Boxing</h1>
      <h2>
        Hos Ashira Oure Boxing Club handler det ikke kun om at træne – det
        handler om at transformere. Uanset om du er nybegynder eller erfaren
        bokser, er vores mål at hjælpe dig med at nå dit fulde potentiale.
      </h2>
    </div>
    <div class="cards-container">
      <div class="trainer-cards">
        <div class="trainer-card">
          <img
            class="default-img"
            src={trænercard_evan_lille.src}
            alt="Træner 1"
          />
          <img
            class="active-img"
            src={trænercard_evan_stor.src}
            alt="Træner 1"
          />
          <div class="active-btn">
            <Button text="Bestil tid" link="#" />
          </div>
        </div>
        <div class="trainer-card">
          <img
            class="default-img"
            src={trænercard_allan_lille.src}
            alt="Allan"
          />
          <img class="active-img" src={trænercard_allan_stor.src} alt="Allan" />
          <div class="active-btn">
            <Button text="Bestil tid" link="#" />
          </div>
        </div>
        <div class="trainer-card">
          <img
            class="default-img"
            src={trænercard_evan_lille.src}
            alt="Evans Ashira"
          />
          <img
            class="active-img"
            src={trænercard_evan_stor.src}
            alt="Evans Ashira"
          />
          <div class="active-btn">
            <Button text="Bestil tid" link="#" />
          </div>
        </div>
        <div class="trainer-card">
          <img
            class="default-img"
            src={trænercard_lucas_lille.src}
            alt="Lucas Ashira"
          />
          <img
            class="active-img"
            src={trænercard_lucas_stor.src}
            alt="Lucas Ashira"
          />
          <div class="active-btn">
            <Button text="Bestil tid" link="#" />
          </div>
        </div>
        <div class="trainer-card">
          <img
            class="default-img"
            src={trænercard_evan_lille.src}
            alt="Træner 5"
          />
          <img
            class="active-img"
            src={trænercard_evan_stor.src}
            alt="Træner 5"
          />
          <div class="active-btn">
            <Button text="Bestil tid" link="#" />
          </div>
        </div>
      </div>
    </div>
    <div class="scrollknap flex">
      <button class="nav-btn prev-btn">
        <img src={venstre.src} alt="" />
      </button>
      <button class="nav-btn next-btn">
        <img src={højre.src} alt="" />
      </button>
    </div>
  </div>
</Layout>

<style>
  .ydre {
    padding: 50px 10px;
    min-height: 100vh;
    gap: 20px;
  }

  .textinfo {
    max-width: 700px;
    text-align: center;
    h1,
    h2 {
      color: var(--color-white);
    }
  }
  .cards-container {
    max-width: 1100px;
    position: relative;
    /* border-left: 5px solid var(--color-primary); */
    /* border-right: 5px solid var(--color-primary); */
    border-radius: 15px;
    height: 100%;
    flex: 1 1 0;
    overflow: hidden;

    /* Add the portal fade effect with mask gradients */
    mask-image: linear-gradient(
      to right,
      transparent 0%,
      rgb(0, 0, 0) 8%,
      rgb(0, 0, 0) 92%,
      transparent 100%
    );
  }

  .trainer-cards {
    display: flex;
    position: relative;
    left: 0;
    top: 0;
    transition: transform 0.5s ease;
    height: calc(100%);
    width: 100%;

    align-items: center;
    justify-content: center;
  }

  .trainer-card {
    height: 100%;
    width: auto;
    padding: 70px 0;
    position: relative;
    /* transition: all 0.7s ease; */
    transform-origin: center;
    flex-shrink: 0;
    opacity: 0.3;
  }

  .default-img {
    width: 100%;
    height: 100%;
    aspect-ratio: 503 / 720;
    object-fit: contain;
  }
  .active-img {
    width: 100%;
    height: 100%;
    aspect-ratio: 1006 / 720;
    object-fit: contain;
  }
  .active-btn {
    height: 50px;
  }

  .trainer-card.active {
    display: flex;
    flex-direction: column;
    align-items: center;
    /* width: clamp(160px, 20%, 400px); */
    transform: scale(1.1);
    opacity: 1;
    gap: 20px;
    z-index: 10;
  }

  .scrollknap {
    gap: 20px;
    padding: 20px 0;
    max-height: 70px;
    height: 100%;
  }

  .nav-btn {
    width: clamp(2rem, 5vw, 3rem);
    height: clamp(2rem, 5vw, 3rem);
    border-radius: 50px;
    transition: all 0.3s ease;
    justify-content: center;
    border: none;

    img {
      width: 100%;
      height: 100%;
    }
  }

  .nav-btn:hover {
    scale: 1.05;
  }

  .trainer-card .active-img,
  .active-btn {
    display: none;
  }

  .trainer-card.active .default-img {
    display: none;
  }

  .trainer-card.active .active-img,
  .active-btn {
    display: flex;
    align-items: center;
    justify-content: center;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    window.addEventListener("load", () => {
      setTimeout(initFuncCarousel, 200);
    });

    function initFuncCarousel() {
      // TypeScript-sikker måde at vælge elementer
      const cardsContainer = document.querySelector(
        ".trainer-cards",
      ) as HTMLElement;
      const trainerCardsNodeList = document.querySelectorAll(".trainer-card");
      const prevBtn = document.querySelector(".prev-btn") as HTMLButtonElement;
      const nextBtn = document.querySelector(".next-btn") as HTMLButtonElement;

      // Konverter NodeList til array for typesikkerhed
      const trainerCards = Array.from(trainerCardsNodeList).map(
        (card) => card as HTMLElement,
      );

      // Beregn kortbredden inkl. margin
      const firstCard = trainerCards[0];
      const firstCardStyle = window.getComputedStyle(firstCard);
      // Hent margin-left og margin-right værdier
      // og konverter dem til tal
      const marginLeft = parseInt(firstCardStyle.marginLeft || "0");
      const marginRight = parseInt(firstCardStyle.marginRight || "0");
      // Beregn kortbredden inkl. margin
      // cardWidth = kortbredde + margin-left + margin-right
      const cardWidth = firstCard.offsetWidth + marginLeft + marginRight;

      // Start med tredje kort i midten (index 2)
      let currentIndex = 2;
      const totalCards = trainerCards.length;

      function initCarousel() {
        const containerElement = document.querySelector(
          ".cards-container",
        ) as HTMLElement;
        if (!containerElement) return;

        const containerWidth = containerElement.offsetWidth;
        const initialOffset = (containerWidth - cardWidth) / 2;

        // Kompensér for oprindeligt index 2
        const startPosition = initialOffset - currentIndex * cardWidth;
        cardsContainer.style.transform = `translateX(${startPosition}px)`;
        updateActiveCard();
      }

      function updateActiveCard() {
        // Opdater aktiv kort
        // Fjern "active" klasse fra alle kort
        trainerCards.forEach((card) => card.classList.remove("active"));
        // Tilføj "active" klasse til det aktuelle kort
        const activeCard = trainerCards[currentIndex];
        activeCard.classList.add("active");

        // Beregn ny scroll-position
        const containerElement = document.querySelector(
          ".cards-container",
        ) as HTMLElement;
        if (!containerElement) return;

        const containerWidth = containerElement.offsetWidth;

        // Beregn ny bredde (efter aktiv-billede er synligt)
        const activeCardStyle = window.getComputedStyle(activeCard);
        const marginLeft = parseInt(activeCardStyle.marginLeft || "0");
        const marginRight = parseInt(activeCardStyle.marginRight || "0");
        const activeCardWidth =
          activeCard.offsetWidth + marginLeft + marginRight;
        const scrollPosition =
          -currentIndex * cardWidth + (containerWidth - activeCardWidth) / 2;

        // Anvend transformationen
        cardsContainer.style.transform = `translateX(${scrollPosition}px)`;
      }

      // Tilføj event listeners til knapperne
      prevBtn.addEventListener("click", () => {
        currentIndex = (currentIndex - 1 + totalCards) % totalCards;
        updateActiveCard();
      });

      nextBtn.addEventListener("click", () => {
        currentIndex = (currentIndex + 1) % totalCards;
        updateActiveCard();
      });

      // Initialiser karrusellen
      initCarousel();

      // Håndter vindue-resize
      window.addEventListener("resize", () => {
        initCarousel();
      });
      console.log(cardsContainer, trainerCards.length, prevBtn, nextBtn);
    }
  });
</script>
